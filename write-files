#!/bin/sh

clone_or_update() {
  # name,path,url
  REPOS="utils,$HOME/.config/utils,https://github.com/alexisquintero/utils.git
         .vim,$HOME/.vim,https://github.com/alexisquintero/.vim
         st,$HOME/st,https://git.suckless.org/st
         i3scripts,$HOME/.config/i3/i3scripts,https://github.com/alexisquintero/i3scripts"
  for REPO in $REPOS
  do
    REMAINDER="$REPO"
    NAME="${REMAINDER%%,*}"; REMAINDER="${REMAINDER#*,}"
    DIR_PATH="${REMAINDER%%,*}"; REMAINDER="${REMAINDER#*,}"
    URL="${REMAINDER%%,*}"; REMAINDER="${REMAINDER#*,}"
    if [ -d "$DIR_PATH" ]; then
      echo "Updating $NAME"
      cd "$DIR_PATH" || return
      git pull -r
    else
      echo "Cloning $NAME"
      cd ~ || return
      mkdir -p "$DIR_PATH"
      cd "$DIR_PATH" || return
      git init
      git remote add "$URL"
      git fetch
      git checkout -t origin/master
    fi
    if [ "$NAME" = "i3scripts" ]
    then
      chmod +x "$DIR_PATH/autoname_workspaces.py"
      chmod +x "$DIR_PATH/util.py"
    elif [ "$NAME" = "st" ]
    then
      sudo make clean install
    fi
  done
}

usage() {
  printf "
\tNo parameters       Link config files
\t-i | --install      Previous actions AND install, clone and update
\t-r | --repository   Previous actions AND add repositories
\t-y | --yes          YES! YES! YES! dot JoJo
\t-h | --help         Literally this\n"
}

INSTALL=false
REPOSITORY=false
YES=false

while [ "$1" != "" ]; do
    case $1 in
        -i | --install )        INSTALL=true
                                ;;
        -r | --repository )     INSTALL=true; REPOSITORY=true
                                ;;
        -y | --yes )            YES=true
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done

for FOLDERS in $(find . -type d -not -path "*/.git/*" -not -name ".git" | sed -e "s/^\.//g")
do
  printf "Creating folder %s..." "$FOLDERS"
  FOLDER_PATH="$HOME""$FOLDERS"
  if [ -d "$FOLDER_PATH" ]
  then
    printf "already exists"
  else
    mkdir -p FOLDER_PATH
    printf "created"
  fi
  printf "\n"
done

for RELATIVE_PATH in $(find . -type f ! -path "*/.git/*" ! -name "write-files" ! -name "README.md" | sed -e "s/^\.//g")
do
  SYMLINK=$HOME""$RELATIVE_PATH
  ACTUAL_FILE=$PWD""$RELATIVE_PATH
  CURRENTSYMLINKTARGET=""
  ANSWER="n"

  printf "\nCurrently: %s" "$RELATIVE_PATH"

  if [ ! -f "$SYMLINK" ]
  then
    printf "\n%s already exists and will be overwritten if a symlink is created" "$FULLPATH"
  elif [ -L "$SYMLINK" ]
  then
    CURRENTSYMLINKTARGET="$(readlink -f "$SYMLINK")"
  fi

  if [ -n "$CURRENTSYMLINKTARGET" ]
  then
    if [ "$ACTUAL_FILE" = "$CURRENTSYMLINKTARGET" ]
    then
      printf "\nCorrectly symlinked already\n"
      continue
    else
      printf "\nCurrent symlink points to %s" "$CURRENTSYMLINKTARGET"
    fi
  fi

  printf "\nSymlink %s ?(y/n)\n" "$RELATIVE_PATH"
  if [ "$YES" = "false" ] || [ "$ANSWER" = "y" ]
  then
    read -r ANSWER
  else
    ANSWER="y"
  fi
  if [ "$ANSWER" = "y" ]
  then
    ln -sfv "$ACTUAL_FILE" "$SYMLINK"
  fi
done

if [ "$INSTALL" = "false" ]
then
  exit
fi

clone_or_update

if [ "$REPOSITORY" = "true" ]
then
  sudo add-apt-repository ppa:papirus/papirus
  # i3 up to date repository
  /usr/lib/apt/apt-helper download-file http://debian.sur5r.net/i3/pool/main/s/sur5r-keyring/sur5r-keyring_2019.02.01_all.deb keyring.deb SHA256:176af52de1a976f103f9809920d80d02411ac5e763f695327de9fa6aff23f416
  sudo dpkg -i keyring.deb
  sudo add-apt-repository "deb http://debian.sur5r.net/i3/ xenial universe"
fi

curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
mkdir -p ~/.nvim/nightly
wget -O ~/.nvim/nvim.appimage https://github.com/neovim/neovim/releases/download/v0.4.2/nvim.appimage
chmod u+x ~/.nvim/nvim.appimage
wget -O ~/.nvim/nightly/nvim.appimage https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage
chmod u+x ~/.nvim/nightly/nvim.appimage
sudo apt-get update
sudo apt-get install i3
sudo apt-get install silversearcher-ag
sudo apt-get install xorg
sudo apt-get install fonts-font-awesome
pip3 install i3ipc
pip3 install fontawesome
sudo apt-get install arc-theme
sudo apt-get install papirus-icon-theme
